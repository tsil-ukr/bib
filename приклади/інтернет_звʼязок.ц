взяти визначення турбо;
взяти визначення Друк;

дія обробник_підключення(турбіна: адреса<турбо::Турбіна>, інтернет_звʼязок: адреса<турбо::ІнтернетЗвʼязок>, аргумент: невідома_адреса, успішно: логічне, код_помилки: позитивне) {
  якщо успішно {
    біб::надрукувати_ю8(ю8"підключено");

    ціль повідомлення = ю8"привіт";
    турбо::записати_в_інтернет_звʼязок(турбіна, інтернет_звʼязок, повідомлення.розмір, повідомлення.дані, пусто, пусто);
  } інакше {
    біб::надрукувати_ю8(ю8"помилка підключення");
  }
}

дія обробник_закінчення(турбіна: адреса<турбо::Турбіна>, інтернет_звʼязок: адреса<турбо::ІнтернетЗвʼязок>, аргумент: невідома_адреса) {
  біб::надрукувати_ю8(ю8"закінчено");
}

дія обробник_даних(турбіна: адреса<турбо::Турбіна>, інтернет_звʼязок: адреса<турбо::ІнтернетЗвʼязок>, аргумент: невідома_адреса, розмір: позитивне, дані: памʼять<п8>) {
  біб::вивести_ю8(ю8"дані ");
  біб::вивести_ю8(ю8 { розмір, дані });
  біб::звільнити_памʼять(турбіна.виділяч, дані);
}

дія обробник_відключення(турбіна: адреса<турбо::Турбіна>, інтернет_звʼязок: адреса<турбо::ІнтернетЗвʼязок>, аргумент: невідома_адреса, з_помилкою: логічне, код_помилки: позитивне) {
  якщо з_помилкою {
    біб::надрукувати_ю8(ю8"відключено з помилкою");
  } інакше {
    біб::надрукувати_ю8(ю8"відключено");
  }
}

дія старт(): ц32 {
  ціль виділяч = біб::отримати_системний_виділяч();

  ціль турбіна = турбо::створити_турбіну(виділяч);

  змінна іа: позитивне = 0;

  ціль результат_іа = турбо::отримати_інтернет_адресу_з_ю8(турбіна, ю8"127.0.0.1", іа::адреса);
  якщо результат_іа == ні {
    біб::надрукувати_ю8(ю8"помилка отримання інтернет адреси");
    вернути 1;
  }

  ціль результат_підключення = турбо::підключити_інтернет_звʼязок(турбіна, іа, 8080, обробник_підключення, обробник_даних, обробник_закінчення, обробник_відключення, пусто);
  якщо результат_підключення == ні {
    біб::надрукувати_ю8(ю8"помилка створення інтернет звʼязку");
  }

  змінна помилка_турбіни = турбо::ПомилкаВідкликуТурбіни { ... };

  турбо::запустити_турбіну(турбіна, пусто, пусто, пусто, помилка_турбіни::адреса);

  турбо::знищити_турбіну(турбіна);

  вернути 0;
}